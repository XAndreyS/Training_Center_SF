#Пример 1. Использование логических операторов с условным оператором.

#Условие задачи. Запишите условие проверки целого числа А, является ли оно кратным двум или трем.

#Итак, число является кратным двум или трем, когда оно делится без остатка на 2 или 3. В прошлом модуле
# мы разбирали арифметический оператор, который находит остаток от деления. Помните его?
# Если забыли, то вернитесь и ещё раз прочитайте материал предыдущего модуля.
#Делится без остатка, значит остаток равен нулю, то есть если в результате деления числа А на 2
# мы получаем в остатке ноль, значит число А кратно 2. Запишем это:
#
#if A % 2 == 0:
#    print('Число А кратно 2')
#
#Аналогично условие будет выглядеть для кратности трём:
#
#if A % 3 == 0:
#    print('Число А кратно 3')
#

#Тогда итоговый код будет выглядеть следующим образом:

if A % 2 == 0 or A % 3 == 0:
    print('Число А кратно 2 или 3')

#Для последовательностей (строк, списков, кортежей) используйте тот факт, что пустая последовательность есть False.
# Хорошо
if not seq:
if seq:

# Плохо
if len(seq)
if not len(seq)

# Примеры

if pozitive_num:  # нет смысла проверять len(pozitive_num)
   # если список не пустой, то печатаем его
   print("Список положительных чисел равен: ", pozitive_num)
else:
   # печатаем, если список оказался пустым
   print("Список положительных чисел пустой")


if not password:  # password строка содержащая пароль, введенный пользователем
   print("Вы забыли ввести пароль! Повторите попытку ещё раз")

#Не сравнивайте логические типы с True и False с помощью ==, иначе получается «масло масляное».
# Хорошо
if greeting:

# Плохо
if greeting == True:

# Совсем не правильно
if greeting is True:

#Задание 13.5.1
# Запишите вместо вопросительных знаков выражение, которое вернет True,
# когда каждое из чисел А и В нечетное.
A = int(input("введите число"))
B = int(input("введите число"))
def are_both_odd(A, B):
    return if A % 2 == 1 and B % 2 == 1:
        print('Числа А и B нечетные')


#Пример 2. Использование операторов сравнения с условным оператором.
#
#Условие задачи. Напишите программу для определения того, является ли данное время суток утром.
# Выведите соответствующее сообщение. Утром считается временной промежуток с 6 часов включительно и до 12 часов
# не включительно.
#
#Чтобы данное время суток было утром, необходимо, чтобы оно было больше либо равно 6 и одновременно строго
# меньше 12, поэтому условие будет выглядеть следующим образом:
if hour >= 6 and hour < 12:
    print("Утро!!!")

#То же самое условие можно записать более лаконичным способом:
if 6 <= hour < 12:
    print("Утро!!!")

#ерепишите код, представленный ниже, с помощью четырех отдельных условных операторов if:
if x > 0:
    if y > 0:               # x > 0, y > 0
         print("Первая четверть")
    else:                   # x > 0, y < 0
         print("Четвертая четверть")
else:
    if y > 0:               # x < 0, y > 0
         print("Вторая четверть")
    else:                   # x < 0, y < 0
         print("Третья четверть")

#Решение
if x > 0 and y > 0:
    print("Первая четверть")
if x > 0 and y < 0:
    print("Четвертая четверть")
if x < 0 and y > 0:
    print("Вторая четверть")
if x < 0 and y < 0:
    print("Третья четверть")

#Конструкция if-elif-else
if a == 10:
    print('a равно 10')
elif a < 10:
    print('a меньше 10')
else:
    print('a больше 10')

#Пример 3. Использование оператора if-elif-else.

#Условие задачи. Введите с клавиатуры номер месяца. Определите сезон в зависимости от номера месяца и выведите
    # сообщение:

       #«Весна» для 3, 4, 5 месяца;
       #«Лето» для 6, 7, 8 месяца;
       #«Осень» для 9, 10, 11 месяца;
       ##«Зима» для 12, 1, 2 месяца.

#В данном случае лучше использовать логический оператор in.
# хорошо
month in [3, 4, 5]

# плохо
month == 3 or month == 4 or month == 5

#Тогда решение данной задачи будет выглядеть следующим образом:
month = int(input())

if month in [3, 4, 5]:
    print("Весна")
elif month in [6, 7, 8]:
    print("Лето")
elif month in [9, 10, 11]:
    print("Осень")
elif month in [12, 1, 2]:
    print("Зима")

