#13.1. Операторы сравнения и логические операторы
#< 	Меньше. Условие верно, если первый операнд меньше второго.
#> 	Больше. Условие верно, если первый операнд больше второго.
#<= 	Меньше или равно. Условие верно, если первый операнд меньше либо равен второму.
#>= 	Больше или равно. Условие верно, если первый операнд больше либо равен второму.
#== 	Равенство. Условие верно, если два операнда равны.
#!= 	Неравенство. Условие верно, если два операнда неравны.

#not 	Логическое «НЕ» 	Возвращает противоположное значение.
#or 	Логическое «ИЛИ» 	Возвращает True, если хотя бы одна из переменных True.
#and 	Логическое «И» 	Возвращает True, если обе переменные True.
#in, not in 	Проверка принадлежности 	Возвращает True, если проверяемая переменная содержится/не содержится в
# последовательности (списке, кортеже, строке...).
#is, is not 	Проверка тождественности 	Возвращает True, если проверяемые объекты эквивалентны/не эквиваленты.
# То есть переменные ссылаются на один и тот же адрес в памяти компьютера.

#Логическое «НЕ»
print(not True)
# False

print(not False)
# True

#Логическое «И»
# можно проверить, находится ли число 1 в промежутке (0,4)
cond1 = 0 < 1
cond2 = 1 < 4

print(cond1 and cond2)
# True

# или, например, содержат ли две строки один и тот же символ
cond3 = 't' in "python"
cond4 = 't' in "django"

print(cond3 and cond4)
# False

#Логическое «ИЛИ»
# к слову, логические выражения можно сразу объединять в одно целое
print(('t' in "python") or ('t' in "django"))
# True

#Задание 13.1.1
print(True or False)
# True

print(True and False)
# False

#Задание 13.1.2
not not not not True
#True

#Задание 13.1.3
not True or (True and not True)
#false
not False and True or False and not True
#true

#Задание 13.1.4 (Внешний источник)
# Запишите вместо вопросительных знаков выражение, которое вернет True,
# если указывается високосный год, иначе False.
# Например, x = 2000 -> True; x = 1900 -> False; и т.д.
# Если есть сомнения в том, какие именно годы високосные,
# обратитесь к Википедии:
# https://ru.wikipedia.org/wiki/Високосный_год#Григорианский_календарь

def is_leap_year(x):
    return (x % 400 == 0) or (( x % 4 == 0) and ( x % 100 != 0))